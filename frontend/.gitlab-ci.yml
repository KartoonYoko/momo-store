include: 
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

stages:
  - build
  - test
  - release
  # - deploy

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  NEXUS_REPO_ARTIFACT_URL: https://nexus.k8s.praktikum-services.tech/repository/momo-store-vtulkin-vladislav-frontend/momo-store-front/momo-store/${VERSION}/momo-store-${VERSION}.tar.gz
  SAST_EXCLUDED_ANALYZERS: gosec-sast

build-frontend:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
      --build-arg $VUE_APP_API_URL
      .
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA

upload-frontend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
    # если образ прошел проверки в CI (сканирование, тесты и т.д), то тегаем latest
    - docker tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:latest

sonarqube-frontend-sast:
  stage: test
  only:
    changes:
    - frontend/*
  needs:
    - job: build-frontend
      artifacts: true
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.projectName="${SONAR_PROJECT_KEY_FRONTEND}"
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_PROJECT_FRONTEND_TOKEN}